"use client"; import React, { useState, useEffect } from "react"; import { useRouter } from "next/navigation"; import MobileLayout from "@/components/layout/MobileLayout"; import { Button } from "@/components/ui/button"; import { Input } from "@/components/ui/input"; import { Textarea } from "@/components/ui/textarea"; import { Label } from "@/components/ui/label"; import { Card, CardContent } from "@/components/ui/card"; import { ChevronLeft, Eye, Edit3, Mic, Image as ImageIcon, Bold, Italic, Underline, Trash2 } from "lucide-react";
export function EditCardView({ params }) { const router = useRouter(); const { cardId } = params || { cardId: "sample-card-id" }; const [isFront, setIsFront] = useState(true); const [cardData, setCardData] = useState({ front: "家族", back: "Family" });
useEffect(() => { // In a real app, fetch card data by cardId // For now, using mock data }, [cardId]); const handleInputChange = (side, value) => { setCardData(prev => ({ ...prev, [side]: value })); }; const handleBack = () => { router.back(); }; const handlePreview = () => { // Preview functionality console.log("Preview card:", cardData); };
const handleDelete = () => { // Delete confirmation would be shown here // For now, just navigate back router.push("/"); }; const handleSave = () => { // In a real app, save card data // For now, just navigate back router.push("/"); }; return ( <MobileLayout bodyClassName="bg-white"> <div className="flex flex-col h-full">
<header className="flex items-center px-2 py-3 border-b border-gray-100"> <Button variant="ghost" size="icon" onClick={handleBack}> <ChevronLeft className="w-6 h-6" /> </Button> <h1 className="flex-1 text-center text-base font-medium"> Edit Card </h1> <Button variant="ghost" size="icon" onClick={handlePreview}> <Eye className="w-5 h-5" /> </Button> </header>
<div className="p-4 space-y-4 flex-1 flex flex-col"> <div className="flex items-center justify-between p-2 border rounded-lg"> <Label className="text-sm text-muted-foreground">Japanese - Kanji - N5 - N4 - Hiragana</Label> <Button variant="ghost" size="icon" className="w-6 h-6 text-muted-foreground"> <Edit3 className="w-4 h-4"/> </Button> </div>
<Card className="flex-1 flex flex-col p-4 border-gray-200"> <CardContent className="flex-1 p-0"> <Textarea value={isFront ? cardData.front : cardData.back} onChange={(e) => handleInputChange(isFront ? "front" : "back", e.target.value)} placeholder={isFront ? "Front" : "Back"} className="w-full h-full resize-none border-0 focus-visible:ring-0 focus-visible:ring-offset-0 text-lg p-0" /> </CardContent> <div className="flex justify-end mt-2"> <Button variant="outline" size="sm" onClick={() => setIsFront(!isFront)}> {isFront ? "Back" : "Front"} </Button> </div> </Card>
<div className="flex items-center justify-between"> <div className="flex gap-1"> <Button variant="ghost" size="icon"><Bold className="w-5 h-5"/></Button> <Button variant="ghost" size="icon"><Italic className="w-5 h-5"/></Button> <Button variant="ghost" size="icon"><Underline className="w-5 h-5"/></Button> </div> <div className="flex gap-1"> <Button variant="ghost" size="icon"><Mic className="w-5 h-5"/></Button> <Button variant="ghost" size="icon"><ImageIcon className="w-5 h-5"/></Button> <Button variant="ghost" size="icon" className="text-red-500 hover:text-red-700" onClick={handleDelete}> <Trash2 className="w-5 h-5"/> </Button> </div> </div>
<div className="mt-auto grid grid-cols-1 gap-3 !mt-auto pt-4"> <Button onClick={handleSave}>Save Changes</Button> </div> </div> </div> </MobileLayout> ); }
